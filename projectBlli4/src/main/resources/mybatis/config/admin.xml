<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="admin">
 	<!-- BlliMemberVO Result Map 설정 -->
 	<resultMap type="blliMemberVO" id="bmbvRM">
 		<result property="memberId" column="member_id"/>
 		<result property="memberEmail" column="member_email"/>
 		<result property="memberPassword" column="member_password"/>
 		<result property="memberName" column="member_name"/>
 		<result property="memberState" column="member_state"/>
 		<result property="recommendingBabyName" column="recommending_baby_name"/>
 		<result property="authority" column="authority"/>
 		<result property="mailAgree" column="mail_agree"/>
 	</resultMap>
 	<!-- BlliMailVO Result Map 설정 -->
 	<resultMap type="BlliMailVO" id="bmlvRM">
 		<result property="mailForm" column="mail_form"/>
 		<result property="mailSubject" column="mail_subject"/>
 		<result property="mailContentFile" column="mail_content_file"/>
 	</resultMap>
 	<!-- BlliPostingVO Result Map 설정 -->
 	<resultMap type="blliPostingVO" id="bpvRM">
 		<result property="postingUrl" column="posting_url"/>
 		<result property="postingTitle" column="posting_title"/>
 		<result property="postingSummary" column="posting_summary"/>
 		<result property="postingContent" column="posting_content"/>
 		<result property="postingScore" column="posting_score"/>
 		<result property="postingLikeCount" column="posting_like_count"/>
 		<result property="postingDislikeCount" column="posting_dislike_count"/>
 		<result property="postingMediaCount" column="posting_media_count"/>
 		<result property="postingPhotoLink" column="posting_photo_link"/>
 		<result property="postingStatus" column="posting_status"/>
 		<result property="postingTotalResidenceTime" column="posting_total_residence_time"/>
 		<result property="postingViewCount" column="posting_view_count"/>
 		<result property="postingScrapeCount" column="posting_scrape_count"/>
 		<result property="postingAuthor" column="posting_author"/>
 		<result property="postingDate" column="posting_date"/>
 		<result property="postingRank" column="posting_rank"/>
 		<result property="postingReplyCount" column="posting_reply_count"/>
 		<result property="smallProduct" column="small_product"/>
 		<result property="smallProductId" column="small_product_id"/>
 	</resultMap>
 	<!-- BlliMidCategoryVO Result Map 설정 -->
 	<resultMap type="blliMidCategoryVO" id="bmcvRM">
 		<result property="midCategory" column="mid_category"/>
 		<result property="midCategoryInfo" column="mid_category_info"/>
 		<result property="midCategoryMainPhotoLink" column="mid_category_main_photo_link"/>
 		<result property="whenToUseMin" column="mid_category_whentouse_min"/>
 		<result property="whenToUseMax" column="mid_category_whentouse_max"/>
 		<result property="bigCategory" column="big_category"/>
 		<result property="midCategoryId" column="mid_category_id"/>
 		<result property="smallProductCount" column="small_product_count"/>
 	</resultMap>
 	<!-- BlliSmallProductVO Result Map 설정 -->
 	<resultMap type="blliSmallProductVO" id="bspvRM">
 		<result property="smallProductId" column="small_product_id"/>
 		<result property="smallProduct" column="small_product"/>
 		<result property="midCategory" column="mid_category"/>
 		<result property="smallProductMaker" column="small_product_maker"/>
 		<result property="smallProductWhenToUseMin" column="small_product_whentouse_min"/>
 		<result property="smallProductWhenToUseMax" column="small_product_whentouse_max"/>
 		<result property="smallProductDibsCount" column="small_product_dibs_count"/>
 		<result property="smallProductMainPhotoLink" column="small_product_main_photo_link"/>
 		<result property="smallProductScore" column="small_product_score"/>
 		<result property="smallProductPostingCount" column="small_product_posting_count"/>
 		<result property="naverShoppingRank" column="naver_shopping_rank"/>
 		<result property="productRegisterDay" column="product_register_day"/>
 		<result property="midCategoryId" column="mid_category_id"/>
 		<result property="detailViewCount" column="detail_view_count"/>
 	</resultMap>
 	<!-- BlliWordCloudVO ResultMap 설정 -->
 	<resultMap type="blliWordCloudVO" id="bwc">
 		<result property="smallProductId" column="small_product_id"/>
 		<result property="word" column="word"/>
 		<result property="wordCount" column="word_count"/>
 	</resultMap>
 	<!-- blliMonthlyProduct ResultMap 설정 -->
 	<resultMap type="blliMonthlyProductVO" id="bmp">
 		<result property="monthlyProduct" column="monthly_product"/>
 		<result property="monthlyProductId" column="monthly_product_id"/>
 		<result property="minUsableMonth" column="min_Usable_Month"/>
 		<result property="maxUsableMonth" column="max_Usable_Month"/>
 		<result property="monthlyProductPhotoLink" column="monthly_Product_PhotoLink"/>
 	</resultMap>
 	<!-- monthlyProductRM ResultMap 설정 -->
 	<resultMap type="HashMap" id="monthlyProductRM">
 		<result property="monthlyProduct" column="monthly_product"/>
 		<result property="monthlyProductId" column="monthly_product_id"/>
 		<result property="minUsableMonth" column="min_Usable_Month"/>
 		<result property="monthlyProductPhotoLink" column="monthly_Product_PhotoLink"/>
 		<result property="midCategoryId" column="mid_category_id"/>
 		<result property="midCategory" column="mid_category"/>
 	</resultMap>
 	<!--	smallProductInMonthlAdminRM ResultMap 설정 -->
 	<resultMap type="HashMap" id="smallProductInMonthlAdminRM">
 		<result property="smallProductId" column="small_product_id"/>
 		<result property="smallProduct" column="small_product"/>
 		<result property="midCategory" column="mid_category"/>
 		<result property="smallProductMainPhotoLink" column="small_product_main_photo_link"/>
 		<result property="smallProductScore" column="small_product_score"/>
 		<result property="smallProductStatus" column="small_product_status"/>
 		<result property="midCategoryId" column="mid_category_id"/>
 		<result property="smallProductId" column="small_product_id"/>
 	</resultMap>
 	<!-- 용호 작성 쿼리 -->
 	<!-- memberId로 회원의 메일주소를 찾습니다. -->
	<select id="findMemberInfoById" resultMap="bmbvRM">
		select member_id, member_email, member_password, member_name from blli_member where member_id = #{value}
	</select>
 	<!-- mailForm으로 해당 메일의 제목, 내용, form 파일을 찾는다. -->
	<select id="findMailSubjectAndContentByMailForm" resultMap="bmlvRM">
		select mail_subject, mail_content_file from blli_mailing where mail_form = #{value}
	</select>
	<!-- 용호 쿼리 끝 -->
	
	<!-- 현석 쿼리 시작 -->
	<select id="unconfirmedPosting" resultMap="bpvRM">
		select posting_url, posting_title, posting_content, small_product, small_product_id from(
			select ceil(rownum/5) as page, posting_url, posting_title, posting_content, small_product, small_product_id from(
				select count(*) over (partition by posting_url) as count_posting_url, posting_url, posting_title, 
				posting_content, small_product, small_product_id from blli_posting where posting_status = 'unconfirmed' order by small_product asc
			) where count_posting_url = 1
		) where page = #{pageNo}
	</select>
	
	<select id="unconfirmedPostingBySearchSmallProduct" resultMap="bpvRM">
		select posting_url, posting_title, posting_content, small_product, small_product_id from(
			select ceil(rownum/5) as page, posting_url, posting_title, posting_content, small_product, small_product_id from(
				select count(*) over (partition by posting_url) as count_posting_url, posting_url, posting_title, 
				posting_content, small_product, small_product_id from blli_posting where posting_status = 'unconfirmed' order by small_product asc
			) where count_posting_url = 1 and small_product like '%' || #{searchWord} || '%'
		) where page = #{pageNo}
	</select>
	
	<select id="unconfirmedPostingBySearchsmallProductId" resultMap="bpvRM">
		select posting_url, posting_title, posting_content, small_product, small_product_id from(
			select ceil(rownum/5) as page, posting_url, posting_title, posting_content, small_product, small_product_id from(
				select posting_url, posting_title, 
				posting_content, small_product, small_product_id from blli_posting where posting_status = 'unconfirmed' order by small_product asc
			) where small_product_id = #{searchWord}
		) where page = #{pageNo}
	</select>
	
	<select id="totalUnconfirmedPosting" resultType="int">
		select count(*) from(
			select count(*) over (partition by posting_url) as count_posting_url from blli_posting where posting_status = 'unconfirmed'
		) where count_posting_url = 1
	</select>
	
	<select id="totalUnconfirmedPostingBySearchSmallProduct" resultType="int">
		select count(*) from(
			select count(*) over (partition by posting_url) as count_posting_url, small_product from blli_posting where posting_status = 'unconfirmed'
		) where count_posting_url = 1 and small_product like '%' || #{searchWord} || '%'
	</select>
	
	<select id="totalUnconfirmedPostingBySearchSmallProductId" resultType="int">
		select count(*) from(
			select small_product_id from blli_posting where posting_status = 'unconfirmed'
		) where small_product_id = #{searchWord}
	</select>
	
	<select id="postingListWithSmallProducts" resultMap="bpvRM">
		select * from(
			select ceil(row_num/5) as page, posting_url, posting_title, small_product, posting_content, small_product_id from(
				select (dense_rank() over (order by posting_url)) row_num, posting_url, posting_title, small_product, posting_content, small_product_id from(
					select count(*) over (partition by posting_url) as small_product_count, posting_url, posting_title, small_product, 
					posting_content, small_product_id from blli_posting where posting_status = 'unconfirmed'
				) where small_product_count > 1 order by posting_url
			)
		) where page = #{pageNo}
	</select>
	
	<select id="totalPostingWithProducts" resultType="int">
		select count(*) from(
			select count(*) over (partition by posting_url) as small_product_count from blli_posting where posting_status = 'unconfirmed'
		) where small_product_count > 1
	</select>
	
	<select id="unconfirmedSmallProduct" resultMap="bspvRM">
		select small_product, mid_category, small_product_whentouse_min, small_product_whentouse_max, 
		small_product_main_photo_link, small_product_id from(
			select ceil(rownum/10) as page, small_product, mid_category, small_product_whentouse_min, 
			small_product_whentouse_max, small_product_main_photo_link, small_product_id
			from blli_small_product where small_product_status = 'unconfirmed'
		) where page = #{pageNo}
	</select>
	
	<select id="unconfirmedSmallProductByMidCategoryId" resultMap="bspvRM">
		select small_product, mid_category, small_product_whentouse_min, small_product_whentouse_max, 
		small_product_main_photo_link, small_product_id from(
			select ceil(rownum/10) as page, small_product, mid_category, small_product_whentouse_min, 
			small_product_whentouse_max, small_product_main_photo_link, small_product_id
			from blli_small_product where mid_category_id = #{midCategoryId} and small_product_status = 'unconfirmed'
		) where page = #{pageNo}
	</select>
	
	<select id="totalUnconfirmedSmallProduct" resultType="int">
		select count(*) from blli_small_product where small_product_status = 'unconfirmed'
	</select>
	<select id="totalUnconfirmedSmallProductInMidCategory" resultType="int">
		select count(*) from blli_small_product where small_product_status = 'unconfirmed' and mid_category_id = #{value}
	</select>
	
	<delete id="deletePosting">
		delete from blli_posting where posting_url = #{postingUrl} and small_product_id = #{smallProductId}
	</delete>
	<delete id="deleteOtherSmallProductPosting">
		delete from blli_posting where posting_url = #{postingUrl} and small_product_id != #{smallProductId}
	</delete>
	
	<update id="selectProduct">
		update blli_posting set posting_status = 'confirmed' where posting_url = #{postingUrl} and small_product = #{smallProduct}
	</update>
	
	<update id="deleteProduct">
		update blli_posting set posting_status = 'dead' where posting_url = #{postingUrl} and small_product != #{smallProduct}
	</update>
	
	<update id="registerPosting">
		update blli_posting set posting_status = 'confirmed', posting_photo_link = #{postingPhotoLink} 
		where posting_url = #{postingUrl} and small_product_id = #{smallProductId}
	</update>
	
	<update id="updatePostingCount">
		update blli_small_product set db_insert_posting_count = db_insert_posting_count + 1 
		where small_product_id = #{smallProductId}
	</update>
	
	<update id="deleteSmallProduct">
		update blli_small_product set small_product_status = 'deadbyadmin' where small_product_id = #{smallProductId}
	</update>
	
	<update id="registerSmallProduct">
		update blli_small_product set small_product_status = 'confirmedbyadmin', small_product_whentouse_min = #{smallProductWhenToUseMin}, 
		small_product_whentouse_max = #{smallProductWhenToUseMax}
		where small_product_id = #{smallProductId}
	</update>
	
	<update id="registerAndUpdateSmallProduct">
		update blli_small_product set small_product_status = 'confirmedbyadmin', small_product_whentouse_min = #{smallProductWhenToUseMin}, 
		small_product_whentouse_max = #{smallProductWhenToUseMax}, small_product = #{smallProduct}
		where small_product_id = #{smallProductId}
	</update>
	
	<update id="updateSmallProductName">
		update blli_small_product set small_product = #{smallProduct} where small_product_id = #{smallProductId}
	</update>
	
	<select id="getMidCategoryId" resultType="String">
		select mid_category_id from blli_small_product where small_product_id = #{smallProductId}
	</select>
	
	<update id="updateMidCategoryWhenToUseMin">
		update blli_mid_category set mid_category_whentouse_min = #{smallProductWhenToUseMin} 
		where mid_category_whentouse_min > #{smallProductWhenToUseMin} or mid_category_whentouse_min is null and mid_category_id = #{midCategoryId}
	</update>
	
	<update id="updateMidCategoryWhenToUseMax">
		update blli_mid_category set mid_category_whentouse_max = #{smallProductWhenToUseMax} 
		where #{smallProductWhenToUseMax} > mid_category_whentouse_max or mid_category_whentouse_max is null and mid_category_id = #{midCategoryId}
	</update>
	
	<select id="checkPosting" resultMap="bpvRM">
		select * from blli_posting where posting_dislike_count >= 1 and posting_status = 'confirmed' and posting_advertisement is NULL
	</select>
	
	<update id="notAdvertisingPosting">
		update blli_posting set posting_advertisement = 'NO' where posting_url = #{postingUrl}
	</update>
	
	<select id="checkMember" resultMap="bmbvRM">
		select member_id, member_email, member_name, authority, mail_agree from blli_member
	</select>
	
	<update id="updateSmallProductStatus">
		update blli_small_product set small_product_status = 'confirmed' where small_product_id = #{smallProductId} and db_insert_posting_count >= 4 and small_product_status = 'confirmedbyadmin' 
	</update>
	
	<insert id="insertPermanentDeadPosting">
		insert into blli_permanent_dead_posting(posting_url, posting_title,small_product_id) values(#{postingUrl}, #{postingTitle},#{smallProductId})
	</insert>

	
	<update id="updatePostingStatusToconfirmed">
		update blli_posting set posting_status = 'confirmed' where small_product_id = #{smallProductId} and posting_status = 'deadbysmallproduct'
	</update>
	
	<select id="getSmallProductWhenToUse" resultMap="bspvRM">
		select min(small_product_whentouse_min) as small_product_whentouse_min, max(small_product_whentouse_max) as small_product_whentouse_max 
		from blli_small_product where mid_category_id = #{midCategoryId} and small_product_status = 'confirmed'
	</select>
	<!-- 현석 쿼리 끝 -->
	<!-- 준영 쿼리 시작 -->
	<!-- 소제품 명으로 본문 불러오는 메서드 -->
	<select id="makingWordCloud" resultMap="bpvRM" parameterType="String">
		select posting_content from blli_posting where posting_url = #{postingUrl} and small_product_id = #{smallProductId} and posting_status = 'confirmed'
	</select>
	<select id="selectPostingContentByPostingUrl" resultType="String" parameterType="String">
		select posting_content from blli_posting where posting_url = #{postingUrl} and small_product_id = #{smallProductId} and posting_status = 'confirmed'
	</select>
	<update id="updateWordCloud">
		update blli_word_cloud set word_count = word_count + #{wordCount} where small_product_Id = 
		#{smallProductId} and word = #{word}
	</update>
	<update id="snsShareCountUp">
		update blli_small_product set sns_share_count =+ 1 where small_product_id = #{value}
	</update>
	<insert id="insertWordCloud">
		insert into blli_word_cloud (word,word_count,small_product_id) 
		values (#{word},#{wordCount},#{smallProductId})
	</insert>
	<select id="selectAllMidCategory" resultMap="bmcvRM">
		select mid_Category_Id,mid_category_main_photo_link,mid_category from blli_mid_category 
	</select>
	<select id="selectAllSmallProduct" resultMap="bspvRM">
		select small_product_id,small_product_main_photo_link from blli_small_product 
	</select>
	<select id="selectMinMaxUseWhenByMidcategoryId" resultMap="bspvRM">
		select max(small_product_whentouse_max) as small_product_whentouse_max ,min(small_product_whentouse_min)  
		as small_product_whentouse_min from blli_small_product where mid_category_id = #{value} and small_product_status = 'confirmedbyadmin'
	</select>
	<update id="updateMinMaxUseWhenByMidcategoryId">
		update blli_mid_category set mid_category_whentouse_max = #{whenToUseMax} , mid_category_whentouse_min = #{whenToUseMin} where mid_category_id = #{midCategoryId}
	</update>
	<update id="updateMidCategoryMainPhotoLink">
		update blli_mid_category set mid_category_main_photo_link = #{midCategoryMainPhotoLink} where mid_category_id = #{midCategoryId}
	</update>
	<update id="updateSmallProductMainPhotoLink">
		update blli_small_product set small_product_main_photo_link = #{smallProductMainPhotoLink} where small_product_id = #{smallProductId}
	</update>
	<select id="selectConfirmedPostingUrlAndSmallProductId" resultMap="bpvRM">
		select small_product_id,posting_url from blli_posting where posting_status = 'confirmed'
	</select>
	<select id="selectAllMonthlyProduct" resultMap="bmp">
		select monthly_product_id from blli_monthly_product
	</select>
	<select id="selectMidCategoryByMonthlyProductID" resultMap="bmcvRM">
			select m.mid_category_id as mid_category_id , m.mid_category_main_photo_link as mid_category_main_photo_link, mp.monthly_product_id as monthly_product_id
	from blli_mid_category m , monthly_product_and_n_mid mp
	where m.mid_category_id = mp.mid_category_id and mp.monthly_product_id = #{value}
	</select>
	<select id="selectMonthlyMidProductList" resultMap="monthlyProductRM">
		select bmp.monthly_product,bmp.min_usable_month,bmp.monthly_product_photolink,
		mpanm.monthly_product_id,mpanm.mid_category_id,mpanm.mid_category
	from blli_monthly_product bmp , monthly_product_and_n_mid mpanm
	where bmp.monthly_product_id = mpanm.monthly_product_id and bmp.min_usable_month = #{value}
	</select>
	<select id="selectSmallProductByMidCategoryId" resultMap="smallProductInMonthlAdminRM">
 		select small_product_id,small_product,mid_category,small_product_main_photo_link,small_product_status
 		small_product_score,mid_category_id,small_product_id
 		from blli_small_product
 		where mid_category_id = #{value} and small_product_status = 'confirmedbyadmin'
	</select>
	
	<select id="countConfirmedPostingNumBySmallProductId" resultType="String">
 		select count(*)
 		from blli_posting
 		where small_product_id = #{value} and posting_status = 'confirmedbyadmin'
	</select>
	<select id="selectConfirmedSmallProductNum" resultType="Integer">
 		select count(*)
 		from blli_small_product
 		where mid_Category_id = #{value} and small_product_status = 'confirmed'
	</select>
	<select id="selectConfirmedbyadminSmallProductNum" resultType="Integer">
 		select count(*)
 		from blli_small_product
 		where mid_Category_id = #{value} and small_product_status = 'confirmedbyadmin'
	</select>
	<select id="selectUnconfirmedSmallProductNum" resultType="Integer">
 		select count(*)
 		from blli_small_product
 		where mid_Category_id = #{value} and small_product_status = 'unconfirmed'
	</select>
	<select id="countBuyLinkNumBySmallProductId" resultType="String">
 		select count(*)
 		from blli_small_prod_buy_link
 		where small_product_id = #{value}
 	</select>
	<update id="updatMonthlyProductPhotoLink">
		update blli_monthly_product set monthly_product_photolink = #{monthlyProductPhotoLink} where monthly_product_id = #{monthlyProductId}
	</update>
	<select id="selectConfirmedProductByMidCategoryId" resultMap="bspvRM">
		select small_product_id, small_product, detail_view_count , naver_shopping_rank , small_product_posting_count 
		from blli_small_product where mid_category_id = #{value} and small_product_status = 'confirmed'
	</select>
	<select id="selectConfirmedbyadminProductIdListByMidCategoryId" resultMap="bspvRM">
		select small_product_id, small_product, detail_view_count , naver_shopping_rank , small_product_posting_count 
		from blli_small_product where mid_category_id = #{value} and small_product_status = 'confirmedbyadmin'
	</select>
	
	<select id="selectConfirmedBlogNum" resultType="String">
 		select count(*)
 		from blli_posting
 		where small_product_id = #{value} and posting_status = 'confirmed'
 	</select>
 	<select id="selectUnconfirmedBlogNum" resultType="String">
 		select count(*)
 		from blli_posting
 		where small_product_id = #{value} and posting_status = 'unconfirmed'
 	</select>
 	<select id="selectMonthlyMidCategoryIndex" resultType="HashMap">
	 	<![CDATA[
	 		select distinct t.min_usable_month as minUsableMonth ,count(*)over (partition by  t.min_usable_month) as totalCount
			from(
				select distinct t.mid_category_id as mid_category_id ,count(*)over(partition by t.mid_category_id) as mid_category_count, t.min_usable_month as min_usable_month
				from(
				select distinct bsp.small_product_id as small_product_id, bsp.mid_category_id as mid_category_id ,bmp.min_usable_month as min_usable_month
				from blli_monthly_product bmp,blli_mid_category bmc ,blli_small_product bsp,monthly_product_and_n_mid mpanm
				where bmp.monthly_product_id = mpanm.monthly_product_id and mpanm.mid_category_id = bsp.mid_category_id  and bsp.small_product_status='confirmedbyadmin' 
			
				) t
			) t where t.mid_category_count >4 order by t.min_usable_month asc
 		]]>
 	</select>
 	<select id="selectOtherSmallProductForPosting" resultMap="bpvRM">
 		select small_product_id , posting_url,posting_title from blli_posting where posting_url = #{postingUrl} and posting_title = #{postingTitle}
 	</select>
	<!-- 준영 끝 -->
 </mapper>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















